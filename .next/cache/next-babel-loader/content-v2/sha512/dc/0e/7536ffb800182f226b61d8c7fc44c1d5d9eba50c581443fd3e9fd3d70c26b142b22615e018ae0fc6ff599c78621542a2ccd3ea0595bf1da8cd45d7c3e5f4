{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/test/work/allProjects/components/Weather/UI/InputFields.jsx\";\nimport React from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { connect } from \"react-redux\";\nimport { handleChangeInputCity, handleChangeInputCountry } from \"../../../redux/Weather/actions/ui\"; // import classes from \"./inputFields.module.css\";\n\nimport { getCity, getCountry, getErrMessage } from \"../../../redux/Weather/selectors/selectors\";\n\nfunction InputField(props) {\n  const {\n    city,\n    country,\n    errMessage,\n    onHandleChangeInputCity,\n    onHandleChangeInputCountry\n  } = props;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"300px\",\n        height: \"120px\",\n        marginTop: \"65px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        error: errMessage ? true : false,\n        style: {\n          width: \"270px\"\n        },\n        helperText: errMessage ? /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: errMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 26\n        }, this) : null,\n        label: errMessage ? \"This city does not exist\" : \"Сity ​​name\",\n        variant: \"outlined\",\n        value: city,\n        onChange: onHandleChangeInputCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"300px\",\n        height: \"120px\",\n        marginTop: \"65px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        style: {\n          width: \"270px\"\n        },\n        placeholder: \"For example: BY\",\n        label: \"Country code\",\n        variant: \"outlined\",\n        type: \"text\",\n        value: country,\n        onChange: onHandleChangeInputCountry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\nfunction mapStateToProps(state) {\n  return {\n    city: getCity(state),\n    country: getCountry(state),\n    errMessage: getErrMessage(state)\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onHandleChangeInputCity: value => dispatch(handleChangeInputCity(value.target.value)),\n    onHandleChangeInputCountry: value => dispatch(handleChangeInputCountry(value.target.value))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputField);","map":{"version":3,"sources":["/home/test/work/allProjects/components/Weather/UI/InputFields.jsx"],"names":["React","TextField","Alert","connect","handleChangeInputCity","handleChangeInputCountry","getCity","getCountry","getErrMessage","InputField","props","city","country","errMessage","onHandleChangeInputCity","onHandleChangeInputCountry","display","width","height","marginTop","mapStateToProps","state","mapDispatchToProps","dispatch","value","target"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,qBADF,EAEEC,wBAFF,QAGO,mCAHP,C,CAIA;;AACA,SACEC,OADF,EAEEC,UAFF,EAGEC,aAHF,QAIO,4CAJP;;AAMA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,QAAM;AACJC,IAAAA,IADI;AAEJC,IAAAA,OAFI;AAGJC,IAAAA,UAHI;AAIJC,IAAAA,uBAJI;AAKJC,IAAAA;AALI,MAMFL,KANJ;AAQA,sBACE;AACE,IAAA,KAAK,EAAE;AACLM,MAAAA,OAAO,EAAE;AADJ,KADT;AAAA,4BAKE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,OADF;AAELC,QAAAA,MAAM,EAAE,OAFH;AAGLC,QAAAA,SAAS,EAAE;AAHN,OADT;AAAA,6BAOE,QAAC,SAAD;AACE,QAAA,KAAK,EAAEN,UAAU,GAAG,IAAH,GAAU,KAD7B;AAEE,QAAA,KAAK,EAAE;AAAEI,UAAAA,KAAK,EAAE;AAAT,SAFT;AAGE,QAAA,UAAU,EACRJ,UAAU,gBAAG,QAAC,KAAD;AAAO,UAAA,QAAQ,EAAC,OAAhB;AAAA,oBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAAH,GAAkD,IAJhE;AAME,QAAA,KAAK,EAAEA,UAAU,GAAG,0BAAH,GAAgC,aANnD;AAOE,QAAA,OAAO,EAAC,UAPV;AAQE,QAAA,KAAK,EAAEF,IART;AASE,QAAA,QAAQ,EAAEG;AATZ;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YALF,eAwBE;AACE,MAAA,KAAK,EAAE;AACLG,QAAAA,KAAK,EAAE,OADF;AAELC,QAAAA,MAAM,EAAE,OAFH;AAGLC,QAAAA,SAAS,EAAE;AAHN,OADT;AAAA,6BAOE,QAAC,SAAD;AACE,QAAA,KAAK,EAAE;AAAEF,UAAAA,KAAK,EAAE;AAAT,SADT;AAEE,QAAA,WAAW,EAAC,iBAFd;AAGE,QAAA,KAAK,EAAC,cAHR;AAIE,QAAA,OAAO,EAAC,UAJV;AAKE,QAAA,IAAI,EAAC,MALP;AAME,QAAA,KAAK,EAAEL,OANT;AAOE,QAAA,QAAQ,EAAEG;AAPZ;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD;;AAED,SAASK,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLV,IAAAA,IAAI,EAAEL,OAAO,CAACe,KAAD,CADR;AAELT,IAAAA,OAAO,EAAEL,UAAU,CAACc,KAAD,CAFd;AAGLR,IAAAA,UAAU,EAAEL,aAAa,CAACa,KAAD;AAHpB,GAAP;AAKD;;AAED,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLT,IAAAA,uBAAuB,EAAGU,KAAD,IACvBD,QAAQ,CAACnB,qBAAqB,CAACoB,KAAK,CAACC,MAAN,CAAaD,KAAd,CAAtB,CAFL;AAGLT,IAAAA,0BAA0B,EAAGS,KAAD,IAC1BD,QAAQ,CAAClB,wBAAwB,CAACmB,KAAK,CAACC,MAAN,CAAaD,KAAd,CAAzB;AAJL,GAAP;AAMD,CAPD;;AASA,eAAerB,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cb,UAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { connect } from \"react-redux\";\nimport {\n  handleChangeInputCity,\n  handleChangeInputCountry,\n} from \"../../../redux/Weather/actions/ui\";\n// import classes from \"./inputFields.module.css\";\nimport {\n  getCity,\n  getCountry,\n  getErrMessage,\n} from \"../../../redux/Weather/selectors/selectors\";\n\nfunction InputField(props) {\n  const {\n    city,\n    country,\n    errMessage,\n    onHandleChangeInputCity,\n    onHandleChangeInputCountry,\n  } = props;\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n      }}\n    >\n      <div\n        style={{\n          width: \"300px\",\n          height: \"120px\",\n          marginTop: \"65px\",\n        }}\n      >\n        <TextField\n          error={errMessage ? true : false}\n          style={{ width: \"270px\" }}\n          helperText={\n            errMessage ? <Alert severity=\"error\">{errMessage}</Alert> : null\n          }\n          label={errMessage ? \"This city does not exist\" : \"Сity ​​name\"}\n          variant=\"outlined\"\n          value={city}\n          onChange={onHandleChangeInputCity}\n        />\n      </div>\n      <div\n        style={{\n          width: \"300px\",\n          height: \"120px\",\n          marginTop: \"65px\",\n        }}\n      >\n        <TextField\n          style={{ width: \"270px\" }}\n          placeholder=\"For example: BY\"\n          label=\"Country code\"\n          variant=\"outlined\"\n          type=\"text\"\n          value={country}\n          onChange={onHandleChangeInputCountry}\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    city: getCity(state),\n    country: getCountry(state),\n    errMessage: getErrMessage(state),\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onHandleChangeInputCity: (value) =>\n      dispatch(handleChangeInputCity(value.target.value)),\n    onHandleChangeInputCountry: (value) =>\n      dispatch(handleChangeInputCountry(value.target.value)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputField);\n"]},"metadata":{},"sourceType":"module"}