{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/test/work/allProjects/Rick and Morty/components/\\u0421haracterTable/Table.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { useEffect } from \"react\";\nimport { loadCharacters } from \"../../redux/actions/loadAndPutCharacters\";\nimport { connect } from \"react-redux\";\nimport { showModal as _showModal, hideModal as _hideModal } from \"../../redux/actions/modal\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport SelectStatus from \"../SelectStatus/SelectStatus\";\nimport { CircularProgress } from '@material-ui/core';\nimport \"./Table.css\";\nvar columns = [{\n  field: \"id\",\n  headerName: \"№\",\n  width: 70,\n  align: \"center\"\n}, {\n  field: \"name\",\n  headerName: \"Name\",\n  width: 150,\n  align: \"center\"\n}, {\n  field: \"status\",\n  headerName: \"Status\",\n  width: 130,\n  align: \"center\"\n}, {\n  field: \"species\",\n  headerName: \"Species\",\n  width: 120,\n  align: \"center\"\n}, {\n  field: \"gender\",\n  headerName: \"Gender\",\n  width: 120,\n  align: \"center\"\n}];\n\nfunction Table(_ref) {\n  _s();\n\n  var onloadCharacters = _ref.onloadCharacters,\n      characters = _ref.characters,\n      modal = _ref.modal,\n      showModal = _ref.showModal,\n      hideModal = _ref.hideModal,\n      pages = _ref.pages,\n      modalImage = _ref.modalImage,\n      modalName = _ref.modalName,\n      modalStatus = _ref.modalStatus,\n      modalSpecies = _ref.modalSpecies,\n      modalGender = _ref.modalGender,\n      page = _ref.page,\n      status = _ref.status,\n      species = _ref.species,\n      gender = _ref.gender,\n      loader = _ref.loader;\n  useEffect(function () {\n    onloadCharacters();\n  }, [onloadCharacters]);\n  characters.map(function (character) {\n    return {\n      id: character.id,\n      name: character.name,\n      status: character.status,\n      species: character.species,\n      gender: character.gender\n    };\n  });\n\n  var onShowModal = function onShowModal(character) {\n    showModal(character);\n  };\n\n  var pageChange = function pageChange(page) {\n    // ПРИНИМАЕТ PAGE\n    onloadCharacters(page, status, species, gender);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [loader ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(DataGrid, {\n        className: \"DataGrid\",\n        rows: characters,\n        columns: columns,\n        pageSize: 10,\n        disableColumnMenu: true,\n        disableColumnSelector: true,\n        hideFooter: true,\n        autoHeight: true,\n        autoPageSize: true,\n        onRowClick: onShowModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        className: \"modal\",\n        open: modal,\n        onClose: hideModal,\n        closeAfterTransition: true,\n        BackdropComponent: Backdrop,\n        BackdropProps: {\n          timeout: 1500\n        },\n        children: /*#__PURE__*/_jsxDEV(Fade, {\n          \"in\": modal,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"fade\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"picture\",\n              src: modalImage,\n              alt: \"logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"textInModal\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [\"Name: \", modalName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Status: \", modalStatus]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Species: \", modalSpecies]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Gender: \", modalGender]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        count: pages,\n        page: page,\n        boundaryCount: 2,\n        color: \"primary\",\n        onChange: function onChange(event, page) {\n          return pageChange(page);\n        },\n        showFirstButton: true,\n        showLastButton: true,\n        size: \"large\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SelectStatus, {\n      page: page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Table, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Table;\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    pages: state.putCharacters.pages,\n    characters: state.putCharacters.characters,\n    modal: state.modal.modal,\n    modalImage: state.modal.image,\n    modalName: state.modal.name,\n    modalStatus: state.modal.status,\n    modalSpecies: state.modal.species,\n    modalGender: state.modal.gender,\n    status: state.filterCharacters.status,\n    species: state.filterCharacters.species,\n    gender: state.filterCharacters.gender,\n    loader: state.loader.loader\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onloadCharacters: function onloadCharacters(page) {\n      return dispatch(loadCharacters(page));\n    },\n    showModal: function showModal(character) {\n      return dispatch(_showModal(character));\n    },\n    hideModal: function hideModal() {\n      return dispatch(_hideModal());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["/home/test/work/allProjects/Rick and Morty/components/СharacterTable/Table.jsx"],"names":["React","Modal","Backdrop","Fade","DataGrid","useEffect","loadCharacters","connect","showModal","hideModal","Pagination","SelectStatus","CircularProgress","columns","field","headerName","width","align","Table","onloadCharacters","characters","modal","pages","modalImage","modalName","modalStatus","modalSpecies","modalGender","page","status","species","gender","loader","map","character","id","name","onShowModal","pageChange","timeout","event","mapStateToProps","state","putCharacters","image","filterCharacters","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport Fade from \"@material-ui/core/Fade\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { useEffect } from \"react\";\nimport { loadCharacters } from \"../../redux/actions/loadAndPutCharacters\";\nimport { connect } from \"react-redux\";\nimport { showModal, hideModal } from \"../../redux/actions/modal\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport SelectStatus from \"../SelectStatus/SelectStatus\";\nimport { CircularProgress } from '@material-ui/core';\nimport \"./Table.css\";\n\nconst columns = [\n  { field: \"id\", headerName: \"№\", width: 70, align: \"center\" },\n  { field: \"name\", headerName: \"Name\", width: 150, align: \"center\" },\n  { field: \"status\", headerName: \"Status\", width: 130, align: \"center\" },\n  { field: \"species\", headerName: \"Species\", width: 120, align: \"center\" },\n  { field: \"gender\", headerName: \"Gender\", width: 120, align: \"center\" },\n];\n\nfunction Table({\n  onloadCharacters,\n  characters,\n  modal,\n  showModal,\n  hideModal,\n  pages,\n  modalImage,\n  modalName,\n  modalStatus,\n  modalSpecies,\n  modalGender,\n  page,\n  status,\n  species,\n  gender,\n  loader,\n}) {\n  useEffect(() => {\n    onloadCharacters();\n  }, [onloadCharacters]);\n\n  characters.map((character) => {\n    return {\n      id: character.id,\n      name: character.name,\n      status: character.status,\n      species: character.species,\n      gender: character.gender,\n    };\n  });\n\n  const onShowModal = (character) => {\n    showModal(character);\n  };\n\n  const pageChange = (page) => {\n    // ПРИНИМАЕТ PAGE\n    onloadCharacters(page, status, species, gender);\n  };\n\n  return (\n    <div>\n      <div className=\"container\">\n        {/* <div>\n        <CircularProgress classes=\"loader\"/> \n        </div>\n        <div className=\"loader\">\n        <CircularProgress size={300} className=\"loader\"/> \n        </div> */}\n        {loader ?\n        <CircularProgress className=\"loader\"/> \n        :\n        <DataGrid\n          className=\"DataGrid\"\n          rows={characters}\n          columns={columns}\n          pageSize={10}\n          disableColumnMenu\n          disableColumnSelector\n          hideFooter\n          autoHeight\n          autoPageSize\n          onRowClick={onShowModal}\n        />\n        }\n        <Modal\n          className=\"modal\"\n          open={modal}\n          onClose={hideModal}\n          closeAfterTransition\n          BackdropComponent={Backdrop}\n          BackdropProps={{\n            timeout: 1500,\n          }}\n        >\n          <Fade in={modal}>\n            <div className=\"fade\">\n              <img className=\"picture\" src={modalImage} alt=\"logo\" />\n              <div className=\"textInModal\">\n                <h2>Name: {modalName}</h2>\n                <p>Status: {modalStatus}</p>\n                <p>Species: {modalSpecies}</p>\n                <p>Gender: {modalGender}</p>\n              </div>\n            </div>\n          </Fade>\n        </Modal>\n      </div>\n      <div className=\"pagination\">\n        <Pagination\n          count={pages}\n          page={page}\n          boundaryCount={2}\n          color=\"primary\"\n          onChange={(event, page) => pageChange(page)}\n          showFirstButton\n          showLastButton\n          size=\"large\"\n        />\n      </div>\n      <SelectStatus page={page} />\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    pages: state.putCharacters.pages,\n    characters: state.putCharacters.characters,\n    modal: state.modal.modal,\n    modalImage: state.modal.image,\n    modalName: state.modal.name,\n    modalStatus: state.modal.status,\n    modalSpecies: state.modal.species,\n    modalGender: state.modal.gender,\n    status: state.filterCharacters.status,\n    species: state.filterCharacters.species,\n    gender: state.filterCharacters.gender,\n    loader: state.loader.loader,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onloadCharacters: (page) => dispatch(loadCharacters(page)),\n    showModal: (character) => dispatch(showModal(character)),\n    hideModal: () => dispatch(hideModal()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n"]},"metadata":{},"sourceType":"module"}