{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ERR_MESSAGE, PUT_WEATHER_SERVER_WEATHERBIT, PUT_WEATHER_SERVER_OPENWEATHERMAP } from \"../actions/constants\";\nconst initialState = {\n  countryCode: \"\",\n  city: \"\",\n  temp: \"\",\n  description: \"\",\n  windSpeed: \"\",\n  errMessage: \"\",\n  lat: \"\",\n  lon: \"\"\n};\n\nconst putWeatherServer = (state = initialState, action) => {\n  switch (action.type) {\n    case PUT_WEATHER_SERVER_OPENWEATHERMAP:\n      const tempServer1 = `${action.payload.main.temp.toPrecision(2)} 째C`;\n      const windSpeedServer1 = `${action.payload.wind.speed.toFixed(2)} m/s`;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        countryCode: action.payload.sys.country,\n        city: action.payload.name,\n        temp: tempServer1,\n        description: action.payload.weather[0].description,\n        windSpeed: windSpeedServer1,\n        errMessage: \"\"\n      });\n\n    case PUT_WEATHER_SERVER_WEATHERBIT:\n      console.log(action.payload);\n      const tempServer2 = `${action.payload.data[0].temp.toPrecision(2)} 째C`;\n      const windSpeedServer2 = `${action.payload.data[0].wind_spd.toFixed(2)} m/s`;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        countryCode: action.payload.data[0].country_code,\n        city: action.payload.data[0].city_name,\n        temp: tempServer2,\n        description: action.payload.data[0].weather.description,\n        windSpeed: windSpeedServer2,\n        lat: action.payload,\n        lon: action.payload,\n        errMessage: \"\"\n      });\n\n    case ERR_MESSAGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errMessage: action.err.error || action.err.message\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default putWeatherServer;","map":{"version":3,"sources":["/home/test/work/allProjects/redux/Weather/reducers/putWeatherServer.js"],"names":["ERR_MESSAGE","PUT_WEATHER_SERVER_WEATHERBIT","PUT_WEATHER_SERVER_OPENWEATHERMAP","initialState","countryCode","city","temp","description","windSpeed","errMessage","lat","lon","putWeatherServer","state","action","type","tempServer1","payload","main","toPrecision","windSpeedServer1","wind","speed","toFixed","sys","country","name","weather","console","log","tempServer2","data","windSpeedServer2","wind_spd","country_code","city_name","err","error","message"],"mappings":";;;;;;AAAA,SACEA,WADF,EAEEC,6BAFF,EAGEC,iCAHF,QAIO,sBAJP;AAMA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,EADM;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,IAAI,EAAE,EAHa;AAInBC,EAAAA,WAAW,EAAE,EAJM;AAKnBC,EAAAA,SAAS,EAAE,EALQ;AAMnBC,EAAAA,UAAU,EAAE,EANO;AAOnBC,EAAAA,GAAG,EAAE,EAPc;AAQnBC,EAAAA,GAAG,EAAE;AARc,CAArB;;AAWA,MAAMC,gBAAgB,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,iCAAL;AACE,YAAMc,WAAW,GAAI,GAAEF,MAAM,CAACG,OAAP,CAAeC,IAAf,CAAoBZ,IAApB,CAAyBa,WAAzB,CAAqC,CAArC,CAAwC,KAA/D;AACA,YAAMC,gBAAgB,GAAI,GAAEN,MAAM,CAACG,OAAP,CAAeI,IAAf,CAAoBC,KAApB,CAA0BC,OAA1B,CAAkC,CAAlC,CAAqC,MAAjE;AACA,6CACKV,KADL;AAEET,QAAAA,WAAW,EAAEU,MAAM,CAACG,OAAP,CAAeO,GAAf,CAAmBC,OAFlC;AAGEpB,QAAAA,IAAI,EAAES,MAAM,CAACG,OAAP,CAAeS,IAHvB;AAIEpB,QAAAA,IAAI,EAAEU,WAJR;AAKET,QAAAA,WAAW,EAAEO,MAAM,CAACG,OAAP,CAAeU,OAAf,CAAuB,CAAvB,EAA0BpB,WALzC;AAMEC,QAAAA,SAAS,EAAEY,gBANb;AAOEX,QAAAA,UAAU,EAAE;AAPd;;AASF,SAAKR,6BAAL;AACE2B,MAAAA,OAAO,CAACC,GAAR,CAAYf,MAAM,CAACG,OAAnB;AACA,YAAMa,WAAW,GAAI,GAAEhB,MAAM,CAACG,OAAP,CAAec,IAAf,CAAoB,CAApB,EAAuBzB,IAAvB,CAA4Ba,WAA5B,CAAwC,CAAxC,CAA2C,KAAlE;AACA,YAAMa,gBAAgB,GAAI,GAAElB,MAAM,CAACG,OAAP,CAAec,IAAf,CAAoB,CAApB,EAAuBE,QAAvB,CAAgCV,OAAhC,CAC1B,CAD0B,CAE1B,MAFF;AAGA,6CACKV,KADL;AAEET,QAAAA,WAAW,EAAEU,MAAM,CAACG,OAAP,CAAec,IAAf,CAAoB,CAApB,EAAuBG,YAFtC;AAGE7B,QAAAA,IAAI,EAAES,MAAM,CAACG,OAAP,CAAec,IAAf,CAAoB,CAApB,EAAuBI,SAH/B;AAIE7B,QAAAA,IAAI,EAAEwB,WAJR;AAKEvB,QAAAA,WAAW,EAAEO,MAAM,CAACG,OAAP,CAAec,IAAf,CAAoB,CAApB,EAAuBJ,OAAvB,CAA+BpB,WAL9C;AAMEC,QAAAA,SAAS,EAAEwB,gBANb;AAOEtB,QAAAA,GAAG,EAAEI,MAAM,CAACG,OAPd;AAQEN,QAAAA,GAAG,EAAEG,MAAM,CAACG,OARd;AASER,QAAAA,UAAU,EAAE;AATd;;AAWF,SAAKT,WAAL;AACE,6CACKa,KADL;AAEEJ,QAAAA,UAAU,EAAEK,MAAM,CAACsB,GAAP,CAAWC,KAAX,IAAoBvB,MAAM,CAACsB,GAAP,CAAWE;AAF7C;;AAIF;AACE,aAAOzB,KAAP;AApCJ;AAsCD,CAvCD;;AAyCA,eAAeD,gBAAf","sourcesContent":["import {\n  ERR_MESSAGE,\n  PUT_WEATHER_SERVER_WEATHERBIT,\n  PUT_WEATHER_SERVER_OPENWEATHERMAP,\n} from \"../actions/constants\";\n\nconst initialState = {\n  countryCode: \"\",\n  city: \"\",\n  temp: \"\",\n  description: \"\",\n  windSpeed: \"\",\n  errMessage: \"\",\n  lat: \"\",\n  lon: \"\",\n};\n\nconst putWeatherServer = (state = initialState, action) => {\n  switch (action.type) {\n    case PUT_WEATHER_SERVER_OPENWEATHERMAP:\n      const tempServer1 = `${action.payload.main.temp.toPrecision(2)} 째C`;\n      const windSpeedServer1 = `${action.payload.wind.speed.toFixed(2)} m/s`;\n      return {\n        ...state,\n        countryCode: action.payload.sys.country,\n        city: action.payload.name,\n        temp: tempServer1,\n        description: action.payload.weather[0].description,\n        windSpeed: windSpeedServer1,\n        errMessage: \"\",\n      };\n    case PUT_WEATHER_SERVER_WEATHERBIT:\n      console.log(action.payload)\n      const tempServer2 = `${action.payload.data[0].temp.toPrecision(2)} 째C`;\n      const windSpeedServer2 = `${action.payload.data[0].wind_spd.toFixed(\n        2\n      )} m/s`;\n      return {\n        ...state,\n        countryCode: action.payload.data[0].country_code,\n        city: action.payload.data[0].city_name,\n        temp: tempServer2,\n        description: action.payload.data[0].weather.description,\n        windSpeed: windSpeedServer2,\n        lat: action.payload,\n        lon: action.payload,\n        errMessage: \"\",\n      };\n    case ERR_MESSAGE:\n      return {\n        ...state,\n        errMessage: action.err.error || action.err.message,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default putWeatherServer;\n"]},"metadata":{},"sourceType":"module"}