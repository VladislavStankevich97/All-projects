{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/test/work/allProjects/ToDo-List/List.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Checkbox } from '@material-ui/core';\nimport { deleteTodo, toggleTodo } from '../redux/ToDo-List/actions/action';\nimport Footer from './Footer';\nimport getSortedTodos from '../redux/selectors/todo';\nimport './List.module.css';\n\nfunction List(props) {\n  var _this = this;\n\n  var todos = props.todos,\n      onToggleTodo = props.onToggleTodo,\n      onDeleteTodo = props.onDeleteTodo;\n\n  var handler = function handler(id) {\n    return function () {\n      onDeleteTodo(id);\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [todos.map(function (todo, index) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: todo.completed ? 'tasks_completed' : 'tasks_uncompleted',\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\u2116 \".concat(index + 1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"task\",\n          children: todo.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: todo.completed,\n          color: \"primary\",\n          inputProps: {\n            'aria-label': 'secondary checkbox'\n          },\n          title: \"\\u0412\\u044B\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\",\n          onClick: onToggleTodo(todo.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          defaultChecked: true,\n          indeterminate: true,\n          inputProps: {\n            'aria-label': 'indeterminate checkbox'\n          },\n          title: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0437\\u0430\\u0434\\u0430\\u0447\\u0443\",\n          label: \"Uncontrolled\",\n          onClick: handler(todo.id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, _this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n\n_c = List;\n\nfunction mapStateToProps(state) {\n  return {\n    todos: getSortedTodos(state)\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onToggleTodo: function onToggleTodo(id) {\n      return function () {\n        return dispatch(toggleTodo(id));\n      };\n    },\n    onDeleteTodo: function onDeleteTodo(id) {\n      return dispatch(deleteTodo(id));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/home/test/work/allProjects/ToDo-List/List.jsx"],"names":["React","connect","Checkbox","deleteTodo","toggleTodo","Footer","getSortedTodos","List","props","todos","onToggleTodo","onDeleteTodo","handler","id","map","todo","index","completed","message","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,mCAAvC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,cAAP,MAA2B,yBAA3B;AACA,OAAO,mBAAP;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAAA,MACXC,KADW,GAC2BD,KAD3B,CACXC,KADW;AAAA,MACJC,YADI,GAC2BF,KAD3B,CACJE,YADI;AAAA,MACUC,YADV,GAC2BH,KAD3B,CACUG,YADV;;AAEnB,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,EAAD;AAAA,WAAQ,YAAM;AAC5BF,MAAAA,YAAY,CAACE,EAAD,CAAZ;AACD,KAFe;AAAA,GAAhB;;AAGA,sBACE;AAAA,eACGJ,KAAK,CAACK,GAAN,CAAU,UAACC,IAAD,EAAOC,KAAP;AAAA,0BACT;AAEE,QAAA,SAAS,EAAED,IAAI,CAACE,SAAL,GAAiB,iBAAjB,GAAqC,mBAFlD;AAAA,gCAIE;AAAA,qCAAYD,KAAK,GAAG,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJF,eAKE;AAAM,UAAA,SAAS,EAAC,MAAhB;AAAA,oBAAwBD,IAAI,CAACG;AAA7B;AAAA;AAAA;AAAA;AAAA,iBALF,eAME,QAAC,QAAD;AACE,UAAA,OAAO,EAAEH,IAAI,CAACE,SADhB;AAEE,UAAA,KAAK,EAAC,SAFR;AAGE,UAAA,UAAU,EAAE;AAAE,0BAAc;AAAhB,WAHd;AAIE,UAAA,KAAK,EAAC,6FAJR;AAKE,UAAA,OAAO,EAAEP,YAAY,CAACK,IAAI,CAACF,EAAN;AALvB;AAAA;AAAA;AAAA;AAAA,iBANF,eAaE,QAAC,QAAD;AACE,UAAA,cAAc,MADhB;AAEE,UAAA,aAAa,MAFf;AAGE,UAAA,UAAU,EAAE;AAAE,0BAAc;AAAhB,WAHd;AAIE,UAAA,KAAK,EAAC,iFAJR;AAKE,UAAA,KAAK,EAAC,cALR;AAME,UAAA,OAAO,EAAED,OAAO,CAACG,IAAI,CAACF,EAAN;AANlB;AAAA;AAAA;AAAA;AAAA,iBAbF;AAAA,SACOE,IAAI,CAACF,EADZ;AAAA;AAAA;AAAA;AAAA,eADS;AAAA,KAAV,CADH,eAyBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;KAlCQN,I;;AAoCT,SAASY,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLX,IAAAA,KAAK,EAAEH,cAAc,CAACc,KAAD;AADhB,GAAP;AAGD;;AAED,SAASC,kBAAT,CAA4BC,QAA5B,EAAsC;AACpC,SAAO;AACLZ,IAAAA,YAAY,EAAE,sBAACG,EAAD;AAAA,aAAQ;AAAA,eAAMS,QAAQ,CAAClB,UAAU,CAACS,EAAD,CAAX,CAAd;AAAA,OAAR;AAAA,KADT;AAELF,IAAAA,YAAY,EAAE,sBAACE,EAAD;AAAA,aAAQS,QAAQ,CAACnB,UAAU,CAACU,EAAD,CAAX,CAAhB;AAAA;AAFT,GAAP;AAID;;AAED,eAAeZ,OAAO,CAACkB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6Cd,IAA7C,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Checkbox } from '@material-ui/core';\nimport { deleteTodo, toggleTodo } from '../redux/ToDo-List/actions/action';\nimport Footer from './Footer';\nimport getSortedTodos from '../redux/selectors/todo';\nimport './List.module.css';\n\nfunction List(props) {\n  const { todos, onToggleTodo, onDeleteTodo } = props;\n  const handler = (id) => () => {\n    onDeleteTodo(id);\n  };\n  return (\n    <div>\n      {todos.map((todo, index) => (\n        <li\n          key={todo.id}\n          className={todo.completed ? 'tasks_completed' : 'tasks_uncompleted'}\n        >\n          <span>{`№ ${index + 1}`}</span>\n          <span className=\"task\">{todo.message}</span>\n          <Checkbox\n            checked={todo.completed}\n            color=\"primary\"\n            inputProps={{ 'aria-label': 'secondary checkbox' }}\n            title=\"Выполнить задачу\"\n            onClick={onToggleTodo(todo.id)}\n          />\n          <Checkbox\n            defaultChecked\n            indeterminate\n            inputProps={{ 'aria-label': 'indeterminate checkbox' }}\n            title=\"Удалить задачу\"\n            label=\"Uncontrolled\"\n            onClick={handler(todo.id)}\n          />\n        </li>\n      ))}\n      <Footer />\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    todos: getSortedTodos(state),\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onToggleTodo: (id) => () => dispatch(toggleTodo(id)),\n    onDeleteTodo: (id) => dispatch(deleteTodo(id)),\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(List);\n"]},"metadata":{},"sourceType":"module"}