{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { CITY, COUNTRY, CHECKBOX_SERVER_WEATHERBIT, CHECKBOX_SERVER_OPENWEATHERMAP } from \"../actions/constants\"; // const initialState = {\n//   city: localStorage.getItem(\"city\") || \"\",\n//   country: localStorage.getItem(\"country\") || \"\",\n//   checkboxServerOpenweathermap: false,\n//   checkboxServerWeatherbit: false,\n// };\n\nconst initialState = {\n  city: \"\",\n  country: \"\",\n  checkboxServerOpenweathermap: false,\n  checkboxServerWeatherbit: false\n};\n\nconst ui = (state = initialState, action) => {\n  switch (action.type) {\n    case CITY:\n      localStorage.setItem(\"city\", action.payload);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        city: action.payload\n      });\n\n    case COUNTRY:\n      localStorage.setItem(\"country\", action.payload.toUpperCase().slice(0, 2));\n      return _objectSpread(_objectSpread({}, state), {}, {\n        country: action.payload.toUpperCase().slice(0, 2)\n      });\n\n    case CHECKBOX_SERVER_OPENWEATHERMAP:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        checkboxServerOpenweathermap: true,\n        checkboxServerWeatherbit: false\n      });\n\n    case CHECKBOX_SERVER_WEATHERBIT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        checkboxServerOpenweathermap: false,\n        checkboxServerWeatherbit: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default ui;","map":{"version":3,"sources":["/home/test/work/allProjects/redux/Weather/reducers/ui.js"],"names":["CITY","COUNTRY","CHECKBOX_SERVER_WEATHERBIT","CHECKBOX_SERVER_OPENWEATHERMAP","initialState","city","country","checkboxServerOpenweathermap","checkboxServerWeatherbit","ui","state","action","type","localStorage","setItem","payload","toUpperCase","slice"],"mappings":";;;;;;AAAA,SACEA,IADF,EAEEC,OAFF,EAGEC,0BAHF,EAIEC,8BAJF,QAKO,sBALP,C,CAOA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,OAAO,EAAE,EAFU;AAGnBC,EAAAA,4BAA4B,EAAE,KAHX;AAInBC,EAAAA,wBAAwB,EAAE;AAJP,CAArB;;AAOA,MAAMC,EAAE,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,IAAL;AACEa,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BH,MAAM,CAACI,OAApC;AACA,6CACKL,KADL;AAEEL,QAAAA,IAAI,EAAEM,MAAM,CAACI;AAFf;;AAIF,SAAKd,OAAL;AACEY,MAAAA,YAAY,CAACC,OAAb,CAAqB,SAArB,EAAgCH,MAAM,CAACI,OAAP,CAAeC,WAAf,GAA6BC,KAA7B,CAAmC,CAAnC,EAAsC,CAAtC,CAAhC;AACA,6CACKP,KADL;AAEEJ,QAAAA,OAAO,EAAEK,MAAM,CAACI,OAAP,CAAeC,WAAf,GAA6BC,KAA7B,CAAmC,CAAnC,EAAsC,CAAtC;AAFX;;AAIF,SAAKd,8BAAL;AACE,6CACKO,KADL;AAEEH,QAAAA,4BAA4B,EAAE,IAFhC;AAGEC,QAAAA,wBAAwB,EAAE;AAH5B;;AAKF,SAAKN,0BAAL;AACE,6CACKQ,KADL;AAEEH,QAAAA,4BAA4B,EAAE,KAFhC;AAGEC,QAAAA,wBAAwB,EAAE;AAH5B;;AAKF;AACE,aAAOE,KAAP;AA1BJ;AA4BD,CA7BD;;AA+BA,eAAeD,EAAf","sourcesContent":["import {\n  CITY,\n  COUNTRY,\n  CHECKBOX_SERVER_WEATHERBIT,\n  CHECKBOX_SERVER_OPENWEATHERMAP,\n} from \"../actions/constants\";\n\n// const initialState = {\n//   city: localStorage.getItem(\"city\") || \"\",\n//   country: localStorage.getItem(\"country\") || \"\",\n//   checkboxServerOpenweathermap: false,\n//   checkboxServerWeatherbit: false,\n// };\n\nconst initialState = {\n  city: \"\",\n  country: \"\",\n  checkboxServerOpenweathermap: false,\n  checkboxServerWeatherbit: false,\n};\n\nconst ui = (state = initialState, action) => {\n  switch (action.type) {\n    case CITY:\n      localStorage.setItem(\"city\", action.payload);\n      return {\n        ...state,\n        city: action.payload,\n      };\n    case COUNTRY:\n      localStorage.setItem(\"country\", action.payload.toUpperCase().slice(0, 2));\n      return {\n        ...state,\n        country: action.payload.toUpperCase().slice(0, 2),\n      };\n    case CHECKBOX_SERVER_OPENWEATHERMAP:\n      return {\n        ...state,\n        checkboxServerOpenweathermap: true,\n        checkboxServerWeatherbit: false,\n      };\n    case CHECKBOX_SERVER_WEATHERBIT:\n      return {\n        ...state,\n        checkboxServerOpenweathermap: false,\n        checkboxServerWeatherbit: true,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default ui;\n"]},"metadata":{},"sourceType":"module"}