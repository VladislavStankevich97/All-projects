{"ast":null,"code":"import _defineProperty from \"/home/test/work/allProjects/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { ERR_MESSAGE, PUT_WEATHER_SERVER_WEATHERBIT, PUT_WEATHER_SERVER_OPENWEATHERMAP } from \"../actions/constants\"; // const initialState = {\n//   countryCode: localStorage.getItem(\"countryCode\") || \"\",\n//   city: localStorage.getItem(\"city\") || \"\",\n//   temp: localStorage.getItem(\"temp\") || \"\",\n//   description: localStorage.getItem(\"description\") || \"\",\n//   windSpeed: localStorage.getItem(\"windSpeed\") || \"\",\n//   errMessage: \"\",\n// };\n\nvar initialState = {\n  countryCode: \"\",\n  city: \"\",\n  temp: \"\",\n  description: \"\",\n  windSpeed: \"\",\n  errMessage: \"\"\n};\n\nvar putWeatherServer = function putWeatherServer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case PUT_WEATHER_SERVER_OPENWEATHERMAP:\n      var tempServer1 = \"\".concat(action.payload.main.temp.toPrecision(2), \" \\xB0C\");\n      var windSpeedServer1 = \"\".concat(action.payload.wind.speed.toFixed(2), \" m/s\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        countryCode: action.payload.sys.country,\n        city: action.payload.name,\n        temp: tempServer1,\n        description: action.payload.weather[0].description,\n        windSpeed: windSpeedServer1,\n        errMessage: \"\"\n      });\n\n    case PUT_WEATHER_SERVER_WEATHERBIT:\n      var tempServer2 = \"\".concat(action.payload.data[0].temp.toPrecision(2), \" \\xB0C\");\n      var windSpeedServer2 = \"\".concat(action.payload.data[0].wind_spd.toFixed(2), \" m/s\");\n      return _objectSpread(_objectSpread({}, state), {}, {\n        countryCode: action.payload.data[0].country_code,\n        city: action.payload.data[0].city_name,\n        temp: tempServer2,\n        description: action.payload.data[0].weather.description,\n        windSpeed: windSpeedServer2,\n        errMessage: \"\"\n      });\n\n    case ERR_MESSAGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        errMessage: action.err.error || action.err.message\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default putWeatherServer;","map":{"version":3,"sources":["/home/test/work/allProjects/redux/Weather/reducers/putWeatherServer.js"],"names":["ERR_MESSAGE","PUT_WEATHER_SERVER_WEATHERBIT","PUT_WEATHER_SERVER_OPENWEATHERMAP","initialState","countryCode","city","temp","description","windSpeed","errMessage","putWeatherServer","state","action","type","tempServer1","payload","main","toPrecision","windSpeedServer1","wind","speed","toFixed","sys","country","name","weather","tempServer2","data","windSpeedServer2","wind_spd","country_code","city_name","err","error","message"],"mappings":";;;;;;AAAA,SACEA,WADF,EAEEC,6BAFF,EAGEC,iCAHF,QAIO,sBAJP,C,CAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,WAAW,EAAE,EADM;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,IAAI,EAAE,EAHa;AAInBC,EAAAA,WAAW,EAAE,EAJM;AAKnBC,EAAAA,SAAS,EAAE,EALQ;AAMnBC,EAAAA,UAAU,EAAE;AANO,CAArB;;AASA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,iCAAL;AACE,UAAMY,WAAW,aAAMF,MAAM,CAACG,OAAP,CAAeC,IAAf,CAAoBV,IAApB,CAAyBW,WAAzB,CAAqC,CAArC,CAAN,WAAjB;AACA,UAAMC,gBAAgB,aAAMN,MAAM,CAACG,OAAP,CAAeI,IAAf,CAAoBC,KAApB,CAA0BC,OAA1B,CAAkC,CAAlC,CAAN,SAAtB;AACA,6CACKV,KADL;AAEEP,QAAAA,WAAW,EAAEQ,MAAM,CAACG,OAAP,CAAeO,GAAf,CAAmBC,OAFlC;AAGElB,QAAAA,IAAI,EAAEO,MAAM,CAACG,OAAP,CAAeS,IAHvB;AAIElB,QAAAA,IAAI,EAAEQ,WAJR;AAKEP,QAAAA,WAAW,EAAEK,MAAM,CAACG,OAAP,CAAeU,OAAf,CAAuB,CAAvB,EAA0BlB,WALzC;AAMEC,QAAAA,SAAS,EAAEU,gBANb;AAOET,QAAAA,UAAU,EAAE;AAPd;;AASF,SAAKR,6BAAL;AACE,UAAMyB,WAAW,aAAMd,MAAM,CAACG,OAAP,CAAeY,IAAf,CAAoB,CAApB,EAAuBrB,IAAvB,CAA4BW,WAA5B,CAAwC,CAAxC,CAAN,WAAjB;AACA,UAAMW,gBAAgB,aAAMhB,MAAM,CAACG,OAAP,CAAeY,IAAf,CAAoB,CAApB,EAAuBE,QAAvB,CAAgCR,OAAhC,CAC1B,CAD0B,CAAN,SAAtB;AAGA,6CACKV,KADL;AAEEP,QAAAA,WAAW,EAAEQ,MAAM,CAACG,OAAP,CAAeY,IAAf,CAAoB,CAApB,EAAuBG,YAFtC;AAGEzB,QAAAA,IAAI,EAAEO,MAAM,CAACG,OAAP,CAAeY,IAAf,CAAoB,CAApB,EAAuBI,SAH/B;AAIEzB,QAAAA,IAAI,EAAEoB,WAJR;AAKEnB,QAAAA,WAAW,EAAEK,MAAM,CAACG,OAAP,CAAeY,IAAf,CAAoB,CAApB,EAAuBF,OAAvB,CAA+BlB,WAL9C;AAMEC,QAAAA,SAAS,EAAEoB,gBANb;AAOEnB,QAAAA,UAAU,EAAE;AAPd;;AASF,SAAKT,WAAL;AACE,6CACKW,KADL;AAEEF,QAAAA,UAAU,EAAEG,MAAM,CAACoB,GAAP,CAAWC,KAAX,IAAoBrB,MAAM,CAACoB,GAAP,CAAWE;AAF7C;;AAIF;AACE,aAAOvB,KAAP;AAjCJ;AAmCD,CApCD;;AAsCA,eAAeD,gBAAf","sourcesContent":["import {\n  ERR_MESSAGE,\n  PUT_WEATHER_SERVER_WEATHERBIT,\n  PUT_WEATHER_SERVER_OPENWEATHERMAP,\n} from \"../actions/constants\";\n\n// const initialState = {\n//   countryCode: localStorage.getItem(\"countryCode\") || \"\",\n//   city: localStorage.getItem(\"city\") || \"\",\n//   temp: localStorage.getItem(\"temp\") || \"\",\n//   description: localStorage.getItem(\"description\") || \"\",\n//   windSpeed: localStorage.getItem(\"windSpeed\") || \"\",\n//   errMessage: \"\",\n// };\n\nconst initialState = {\n  countryCode: \"\",\n  city: \"\",\n  temp: \"\",\n  description: \"\",\n  windSpeed: \"\",\n  errMessage: \"\",\n};\n\nconst putWeatherServer = (state = initialState, action) => {\n  switch (action.type) {\n    case PUT_WEATHER_SERVER_OPENWEATHERMAP:\n      const tempServer1 = `${action.payload.main.temp.toPrecision(2)} °C`;\n      const windSpeedServer1 = `${action.payload.wind.speed.toFixed(2)} m/s`;\n      return {\n        ...state,\n        countryCode: action.payload.sys.country,\n        city: action.payload.name,\n        temp: tempServer1,\n        description: action.payload.weather[0].description,\n        windSpeed: windSpeedServer1,\n        errMessage: \"\",\n      };\n    case PUT_WEATHER_SERVER_WEATHERBIT:\n      const tempServer2 = `${action.payload.data[0].temp.toPrecision(2)} °C`;\n      const windSpeedServer2 = `${action.payload.data[0].wind_spd.toFixed(\n        2\n      )} m/s`;\n      return {\n        ...state,\n        countryCode: action.payload.data[0].country_code,\n        city: action.payload.data[0].city_name,\n        temp: tempServer2,\n        description: action.payload.data[0].weather.description,\n        windSpeed: windSpeedServer2,\n        errMessage: \"\",\n      };\n    case ERR_MESSAGE:\n      return {\n        ...state,\n        errMessage: action.err.error || action.err.message,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default putWeatherServer;\n"]},"metadata":{},"sourceType":"module"}