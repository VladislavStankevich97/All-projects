{"ast":null,"code":"import _toConsumableArray from \"/home/test/work/allProjects/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/home/test/work/allProjects/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { TOGGLE_TODO, DELETE_TODO, ADD_TODO, INPUT } from \"../actions/constants\";\nvar initialState = {\n  message: \"\",\n  data: [],\n  completed: false\n};\nexport default function headerReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INPUT:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          message: action.text\n        });\n      }\n\n    case ADD_TODO:\n      {\n        var data = state.data;\n        data.push({\n          message: state.message,\n          id: action.id,\n          completed: action.completed\n        });\n        var res = {\n          data: _toConsumableArray(data)\n        };\n        return res;\n      }\n\n    case DELETE_TODO:\n      var todos = state.data.filter(function (todo) {\n        return todo.id !== action.id;\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: todos\n      });\n\n    case TOGGLE_TODO:\n      {\n        var _res = state.data.map(function (todo) {\n          if (todo.id === action.id) {\n            return _objectSpread(_objectSpread({}, todo), {}, {\n              completed: !todo.completed\n            });\n          }\n\n          return todo;\n        });\n\n        return {\n          data: _toConsumableArray(_res)\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/test/work/allProjects/redux/ToDo-List/reducers/headerReducer.js"],"names":["TOGGLE_TODO","DELETE_TODO","ADD_TODO","INPUT","initialState","message","data","completed","headerReducer","state","action","type","text","push","id","res","todos","filter","todo","map"],"mappings":";;;;;;;AAAA,SACEA,WADF,EAEEC,WAFF,EAGEC,QAHF,EAIEC,KAJF,QAKO,sBALP;AAOA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,EADU;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,SAAS,EAAE;AAHQ,CAArB;AAMA,eAAe,SAASC,aAAT,GAAqD;AAAA,MAA9BC,KAA8B,uEAAtBL,YAAsB;AAAA,MAARM,MAAQ;;AAClE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,KAAL;AAAY;AACV,+CAAYM,KAAZ;AAAmBJ,UAAAA,OAAO,EAAEK,MAAM,CAACE;AAAnC;AACD;;AACD,SAAKV,QAAL;AAAe;AAAA,YACLI,IADK,GACIG,KADJ,CACLH,IADK;AAEbA,QAAAA,IAAI,CAACO,IAAL,CAAU;AACRR,UAAAA,OAAO,EAAEI,KAAK,CAACJ,OADP;AAERS,UAAAA,EAAE,EAAEJ,MAAM,CAACI,EAFH;AAGRP,UAAAA,SAAS,EAAEG,MAAM,CAACH;AAHV,SAAV;AAKA,YAAMQ,GAAG,GAAG;AAAET,UAAAA,IAAI,qBAAMA,IAAN;AAAN,SAAZ;AACA,eAAOS,GAAP;AACD;;AACD,SAAKd,WAAL;AACE,UAAMe,KAAK,GAAGP,KAAK,CAACH,IAAN,CAAWW,MAAX,CAAkB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACJ,EAAL,KAAYJ,MAAM,CAACI,EAA7B;AAAA,OAAlB,CAAd;AACA,6CACKL,KADL;AAEEH,QAAAA,IAAI,EAAEU;AAFR;;AAIF,SAAKhB,WAAL;AAAkB;AAChB,YAAMe,IAAG,GAAGN,KAAK,CAACH,IAAN,CAAWa,GAAX,CAAe,UAACD,IAAD,EAAU;AACnC,cAAIA,IAAI,CAACJ,EAAL,KAAYJ,MAAM,CAACI,EAAvB,EAA2B;AACzB,mDAAYI,IAAZ;AAAkBX,cAAAA,SAAS,EAAE,CAACW,IAAI,CAACX;AAAnC;AACD;;AACD,iBAAOW,IAAP;AACD,SALW,CAAZ;;AAMA,eAAO;AAAEZ,UAAAA,IAAI,qBAAMS,IAAN;AAAN,SAAP;AACD;;AACD;AACE,aAAON,KAAP;AA9BJ;AAgCD","sourcesContent":["import {\n  TOGGLE_TODO,\n  DELETE_TODO,\n  ADD_TODO,\n  INPUT,\n} from \"../actions/constants\";\n\nconst initialState = {\n  message: \"\",\n  data: [],\n  completed: false,\n};\n\nexport default function headerReducer(state = initialState, action) {\n  switch (action.type) {\n    case INPUT: {\n      return { ...state, message: action.text };\n    }\n    case ADD_TODO: {\n      const { data } = state;\n      data.push({\n        message: state.message,\n        id: action.id,\n        completed: action.completed,\n      });\n      const res = { data: [...data] };\n      return res;\n    }\n    case DELETE_TODO:\n      const todos = state.data.filter((todo) => todo.id !== action.id);\n      return {\n        ...state,\n        data: todos,\n      };\n    case TOGGLE_TODO: {\n      const res = state.data.map((todo) => {\n        if (todo.id === action.id) {\n          return { ...todo, completed: !todo.completed };\n        }\n        return todo;\n      });\n      return { data: [...res] };\n    }\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}