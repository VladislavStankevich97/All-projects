{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable no-case-declarations */\nimport { TOGGLE_TODO, DELETE_TODO, ADD_TODO } from '../actions/constants';\nconst initialState = {\n  value: '',\n  data: []\n};\nexport default function headerReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO:\n      {\n        const {\n          data\n        } = state;\n        data.push({\n          message: action.message,\n          id: action.id,\n          completed: action.completed\n        });\n        const res = {\n          data: [...data]\n        };\n        localStorage.setItem('data', JSON.stringify(state.data));\n        return res;\n      }\n\n    case DELETE_TODO:\n      const todos = state.data.filter(todo => todo.id !== action.id);\n      localStorage.setItem('data', JSON.stringify(todos));\n      return _objectSpread(_objectSpread({}, state), {}, {\n        data: todos\n      });\n\n    case TOGGLE_TODO:\n      {\n        const res = state.data.map(todo => {\n          if (todo.id === action.id) {\n            return _objectSpread(_objectSpread({}, todo), {}, {\n              completed: !todo.completed\n            });\n          }\n\n          return todo;\n        });\n        localStorage.setItem('data', JSON.stringify([...res]));\n        return {\n          data: [...res]\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/test/work/allProjects/redux/ToDo-List/reducers/headerReducer.js"],"names":["TOGGLE_TODO","DELETE_TODO","ADD_TODO","initialState","value","data","headerReducer","state","action","type","push","message","id","completed","res","localStorage","setItem","JSON","stringify","todos","filter","todo","map"],"mappings":";;;;;;AAAA;AAEA,SAASA,WAAT,EAAsBC,WAAtB,EAAmCC,QAAnC,QAAmD,sBAAnD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE;AAFa,CAArB;AAKA,eAAe,SAASC,aAAT,CAAuBC,KAAK,GAAGJ,YAA/B,EAA6CK,MAA7C,EAAqD;AAClE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,QAAL;AAAe;AACb,cAAM;AAAEG,UAAAA;AAAF,YAAWE,KAAjB;AACAF,QAAAA,IAAI,CAACK,IAAL,CAAU;AACRC,UAAAA,OAAO,EAAEH,MAAM,CAACG,OADR;AAERC,UAAAA,EAAE,EAAEJ,MAAM,CAACI,EAFH;AAGRC,UAAAA,SAAS,EAAEL,MAAM,CAACK;AAHV,SAAV;AAKA,cAAMC,GAAG,GAAG;AAAET,UAAAA,IAAI,EAAE,CAAC,GAAGA,IAAJ;AAAR,SAAZ;AACAU,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeX,KAAK,CAACF,IAArB,CAA7B;AACA,eAAOS,GAAP;AACD;;AACD,SAAKb,WAAL;AACE,YAAMkB,KAAK,GAAGZ,KAAK,CAACF,IAAN,CAAWe,MAAX,CAAmBC,IAAD,IAAUA,IAAI,CAACT,EAAL,KAAYJ,MAAM,CAACI,EAA/C,CAAd;AACAG,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeC,KAAf,CAA7B;AACA,6CACKZ,KADL;AAEEF,QAAAA,IAAI,EAAEc;AAFR;;AAIF,SAAKnB,WAAL;AAAkB;AAChB,cAAMc,GAAG,GAAGP,KAAK,CAACF,IAAN,CAAWiB,GAAX,CAAgBD,IAAD,IAAU;AACnC,cAAIA,IAAI,CAACT,EAAL,KAAYJ,MAAM,CAACI,EAAvB,EAA2B;AACzB,mDAAYS,IAAZ;AAAkBR,cAAAA,SAAS,EAAE,CAACQ,IAAI,CAACR;AAAnC;AACD;;AACD,iBAAOQ,IAAP;AACD,SALW,CAAZ;AAMAN,QAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAe,CAAC,GAAGJ,GAAJ,CAAf,CAA7B;AACA,eAAO;AAAET,UAAAA,IAAI,EAAE,CAAC,GAAGS,GAAJ;AAAR,SAAP;AACD;;AACD;AACE,aAAOP,KAAP;AA9BJ;AAgCD","sourcesContent":["/* eslint-disable no-case-declarations */\n\nimport { TOGGLE_TODO, DELETE_TODO, ADD_TODO } from '../actions/constants';\n\nconst initialState = {\n  value: '',\n  data: [],\n};\n\nexport default function headerReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TODO: {\n      const { data } = state;\n      data.push({\n        message: action.message,\n        id: action.id,\n        completed: action.completed,\n      });\n      const res = { data: [...data] };\n      localStorage.setItem('data', JSON.stringify(state.data));\n      return res;\n    }\n    case DELETE_TODO:\n      const todos = state.data.filter((todo) => todo.id !== action.id);\n      localStorage.setItem('data', JSON.stringify(todos));\n      return {\n        ...state,\n        data: todos,\n      };\n    case TOGGLE_TODO: {\n      const res = state.data.map((todo) => {\n        if (todo.id === action.id) {\n          return { ...todo, completed: !todo.completed };\n        }\n        return todo;\n      });\n      localStorage.setItem('data', JSON.stringify([...res]));\n      return { data: [...res] };\n    }\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}