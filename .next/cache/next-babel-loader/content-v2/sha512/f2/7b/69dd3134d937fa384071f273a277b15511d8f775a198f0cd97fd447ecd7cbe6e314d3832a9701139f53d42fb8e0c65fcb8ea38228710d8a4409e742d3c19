{"ast":null,"code":"import _regeneratorRuntime from \"/home/test/work/allProjects/node_modules/next/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(workerLoadData),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(watchLoadData);\n\nimport { takeEvery, put, call, select } from \"redux-saga/effects\";\nimport { putCharacters } from \"../actions/loadAndPutCharacters\";\nimport { LOAD_CHARACTERS } from \"../actions/rickandmorty/constants\";\nimport { showLoader, hideLoader } from '../actions/loader';\n\nvar fetchData = function fetchData(page, status, species, gender) {\n  return fetch(\"https://rickandmortyapi.com/api/character?page=\".concat(page, \"\\n      \").concat(status ? \"&status=\".concat(status) : \"\", \"\\n      \").concat(species ? \"&species=\".concat(species) : \"\", \"\\n      \").concat(gender ? \"&gender=\".concat(gender) : \"\")).then(function (respone) {\n    return respone.json();\n  });\n};\n\nfunction workerLoadData(_ref) {\n  var page, status, species, gender, data;\n  return _regeneratorRuntime.wrap(function workerLoadData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          page = _ref.page;\n          _context.next = 3;\n          return put(showLoader());\n\n        case 3:\n          _context.next = 5;\n          return select(function (state) {\n            return state.filterCharacters.status;\n          });\n\n        case 5:\n          status = _context.sent;\n          _context.next = 8;\n          return select(function (state) {\n            return state.filterCharacters.species;\n          });\n\n        case 8:\n          species = _context.sent;\n          _context.next = 11;\n          return select(function (state) {\n            return state.filterCharacters.gender;\n          });\n\n        case 11:\n          gender = _context.sent;\n          _context.next = 14;\n          return call(fetchData, page, status, species, gender);\n\n        case 14:\n          data = _context.sent;\n          _context.next = 17;\n          return put(putCharacters(data));\n\n        case 17:\n          _context.next = 19;\n          return put(putCharacters(data));\n\n        case 19:\n          _context.next = 21;\n          return put(hideLoader());\n\n        case 21:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nexport default function watchLoadData() {\n  return _regeneratorRuntime.wrap(function watchLoadData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(LOAD_CHARACTERS, workerLoadData);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["/home/test/work/allProjects/redux/generators/saga.js"],"names":["workerLoadData","watchLoadData","takeEvery","put","call","select","putCharacters","LOAD_CHARACTERS","showLoader","hideLoader","fetchData","page","status","species","gender","fetch","then","respone","json","state","filterCharacters","data"],"mappings":";;oDAcUA,c;qDAWeC,a;;AAzBzB,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,MAA/B,QAA6C,oBAA7C;AACA,SAASC,aAAT,QAA8B,iCAA9B;AACA,SAASC,eAAT,QAAgC,mCAAhC;AACA,SAAQC,UAAR,EAAoBC,UAApB,QAAqC,mBAArC;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAOC,MAAP,EAAeC,OAAf,EAAwBC,MAAxB,EAAmC;AACnD,SAAOC,KAAK,0DACwCJ,IADxC,qBAENC,MAAM,qBAAcA,MAAd,IAAyB,EAFzB,qBAGNC,OAAO,sBAAeA,OAAf,IAA2B,EAH5B,qBAINC,MAAM,qBAAcA,MAAd,IAAyB,EAJzB,EAAL,CAKLE,IALK,CAKA,UAACC,OAAD;AAAA,WAAaA,OAAO,CAACC,IAAR,EAAb;AAAA,GALA,CAAP;AAMD,CAPD;;AASA,SAAUlB,cAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2BW,UAAAA,IAA3B,QAA2BA,IAA3B;AAAA;AACE,iBAAMR,GAAG,CAACK,UAAU,EAAX,CAAT;;AADF;AAAA;AAEiB,iBAAMH,MAAM,CAAC,UAACc,KAAD;AAAA,mBAAWA,KAAK,CAACC,gBAAN,CAAuBR,MAAlC;AAAA,WAAD,CAAZ;;AAFjB;AAEQA,UAAAA,MAFR;AAAA;AAGkB,iBAAMP,MAAM,CAAC,UAACc,KAAD;AAAA,mBAAWA,KAAK,CAACC,gBAAN,CAAuBP,OAAlC;AAAA,WAAD,CAAZ;;AAHlB;AAGQA,UAAAA,OAHR;AAAA;AAIiB,iBAAMR,MAAM,CAAC,UAACc,KAAD;AAAA,mBAAWA,KAAK,CAACC,gBAAN,CAAuBN,MAAlC;AAAA,WAAD,CAAZ;;AAJjB;AAIQA,UAAAA,MAJR;AAAA;AAKe,iBAAMV,IAAI,CAACM,SAAD,EAAYC,IAAZ,EAAkBC,MAAlB,EAA0BC,OAA1B,EAAmCC,MAAnC,CAAV;;AALf;AAKQO,UAAAA,IALR;AAAA;AAME,iBAAMlB,GAAG,CAACG,aAAa,CAACe,IAAD,CAAd,CAAT;;AANF;AAAA;AAOE,iBAAMlB,GAAG,CAACG,aAAa,CAACe,IAAD,CAAd,CAAT;;AAPF;AAAA;AAQE,iBAAMlB,GAAG,CAACM,UAAU,EAAX,CAAT;;AARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAWA,eAAe,SAAUR,aAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACb,iBAAMC,SAAS,CAACK,eAAD,EAAkBP,cAAlB,CAAf;;AADa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { takeEvery, put, call, select } from \"redux-saga/effects\";\nimport { putCharacters } from \"../actions/loadAndPutCharacters\";\nimport { LOAD_CHARACTERS } from \"../actions/rickandmorty/constants\";\nimport {showLoader, hideLoader} from '../actions/loader'\n\nconst fetchData = (page, status, species, gender) => {\n  return fetch(\n    `https://rickandmortyapi.com/api/character?page=${page}\n      ${status ? `&status=${status}` : \"\"}\n      ${species ? `&species=${species}` : \"\"}\n      ${gender ? `&gender=${gender}` : \"\"}`\n  ).then((respone) => respone.json());\n};\n\nfunction* workerLoadData({ page }) {\n  yield put(showLoader());\n  const status = yield select((state) => state.filterCharacters.status);\n  const species = yield select((state) => state.filterCharacters.species);\n  const gender = yield select((state) => state.filterCharacters.gender);\n  const data = yield call(fetchData, page, status, species, gender);\n  yield put(putCharacters(data));\n  yield put(putCharacters(data));\n  yield put(hideLoader());\n}\n\nexport default function* watchLoadData() {\n  yield takeEvery(LOAD_CHARACTERS, workerLoadData);\n}\n"]},"metadata":{},"sourceType":"module"}