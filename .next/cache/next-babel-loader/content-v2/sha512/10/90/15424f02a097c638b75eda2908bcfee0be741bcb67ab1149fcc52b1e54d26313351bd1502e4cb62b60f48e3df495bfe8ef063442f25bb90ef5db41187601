{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/test/work/allProjects/components/Weather/Checkboxes.jsx\";\nimport { Checkbox } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { handleChangeCheckboxServerOpenweathermap, handleChangeCheckboxServerWeatherbit } from \"../../redux/Weather/actions/ui\";\nimport { getCheckboxServerOpenweathermap, getCheckboxServerWeatherbit } from '../../../redux/Weather/selectors/selectors';\n\nfunction Checkboxs(props) {\n  var isCheckboxServerWeatherbit = props.isCheckboxServerWeatherbit,\n      isCheckboxServerOpenweathermap = props.isCheckboxServerOpenweathermap,\n      onHandleChangeCheckboxServerWeatherbit = props.onHandleChangeCheckboxServerWeatherbit,\n      onHandleChangeCheckboxServerOpenweathermap = props.onHandleChangeCheckboxServerOpenweathermap;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checkbox\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Server 1:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n      checked: isCheckboxServerOpenweathermap,\n      onChange: onHandleChangeCheckboxServerOpenweathermap,\n      color: \"primary\",\n      inputProps: {\n        \"aria-label\": \"secondary checkbox\"\n      },\n      title: \"Show weather from server 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Server 2:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n      checked: isCheckboxServerWeatherbit,\n      onChange: onHandleChangeCheckboxServerWeatherbit,\n      color: \"primary\",\n      inputProps: {\n        \"aria-label\": \"secondary checkbox\"\n      },\n      title: \"Show weather from server 2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Checkboxs;\n\nfunction mapStateToProps(state) {\n  return {\n    isCheckboxServerOpenweathermap: getCheckboxServerOpenweathermap(state),\n    isCheckboxServerWeatherbit: getCheckboxServerWeatherbit(state)\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onHandleChangeCheckboxServerOpenweathermap: function onHandleChangeCheckboxServerOpenweathermap() {\n      return dispatch(handleChangeCheckboxServerOpenweathermap());\n    },\n    onHandleChangeCheckboxServerWeatherbit: function onHandleChangeCheckboxServerWeatherbit() {\n      return dispatch(handleChangeCheckboxServerWeatherbit());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkboxs);\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkboxs\");","map":{"version":3,"sources":["/home/test/work/allProjects/components/Weather/Checkboxes.jsx"],"names":["Checkbox","connect","handleChangeCheckboxServerOpenweathermap","handleChangeCheckboxServerWeatherbit","getCheckboxServerOpenweathermap","getCheckboxServerWeatherbit","Checkboxs","props","isCheckboxServerWeatherbit","isCheckboxServerOpenweathermap","onHandleChangeCheckboxServerWeatherbit","onHandleChangeCheckboxServerOpenweathermap","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,mBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,wCADF,EAEEC,oCAFF,QAGO,gCAHP;AAIA,SAAQC,+BAAR,EAAyCC,2BAAzC,QAA2E,4CAA3E;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA,MAEtBC,0BAFsB,GAMpBD,KANoB,CAEtBC,0BAFsB;AAAA,MAGtBC,8BAHsB,GAMpBF,KANoB,CAGtBE,8BAHsB;AAAA,MAItBC,sCAJsB,GAMpBH,KANoB,CAItBG,sCAJsB;AAAA,MAKtBC,0CALsB,GAMpBJ,KANoB,CAKtBI,0CALsB;AAQxB,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AACE,MAAA,OAAO,EAAEF,8BADX;AAEE,MAAA,QAAQ,EAAEE,0CAFZ;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,UAAU,EAAE;AAAE,sBAAc;AAAhB,OAJd;AAKE,MAAA,KAAK,EAAC;AALR;AAAA;AAAA;AAAA;AAAA,YAFF,eASE;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE,QAAC,QAAD;AACE,MAAA,OAAO,EAAEH,0BADX;AAEE,MAAA,QAAQ,EAAEE,sCAFZ;AAGE,MAAA,KAAK,EAAC,SAHR;AAIE,MAAA,UAAU,EAAE;AAAE,sBAAc;AAAhB,OAJd;AAKE,MAAA,KAAK,EAAC;AALR;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;KA7BQJ,S;;AA+BT,SAASM,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLJ,IAAAA,8BAA8B,EAAEL,+BAA+B,CAACS,KAAD,CAD1D;AAELL,IAAAA,0BAA0B,EAAEH,2BAA2B,CAACQ,KAAD;AAFlD,GAAP;AAID;;AAED,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLJ,IAAAA,0CAA0C,EAAE;AAAA,aAC1CI,QAAQ,CAACb,wCAAwC,EAAzC,CADkC;AAAA,KADvC;AAGLQ,IAAAA,sCAAsC,EAAE;AAAA,aACtCK,QAAQ,CAACZ,oCAAoC,EAArC,CAD8B;AAAA;AAHnC,GAAP;AAMD,CAPD;;AASA,eAAeF,OAAO,CAACW,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CR,SAA7C,CAAf","sourcesContent":["import { Checkbox } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport {\n  handleChangeCheckboxServerOpenweathermap,\n  handleChangeCheckboxServerWeatherbit,\n} from \"../../redux/Weather/actions/ui\";\nimport {getCheckboxServerOpenweathermap, getCheckboxServerWeatherbit} from '../../../redux/Weather/selectors/selectors'\n\nfunction Checkboxs(props) {\n  const {\n    isCheckboxServerWeatherbit,\n    isCheckboxServerOpenweathermap,\n    onHandleChangeCheckboxServerWeatherbit,\n    onHandleChangeCheckboxServerOpenweathermap,\n  } = props;\n\n  return (\n    <div className=\"checkbox\">\n      <span>Server 1:</span>\n      <Checkbox\n        checked={isCheckboxServerOpenweathermap}\n        onChange={onHandleChangeCheckboxServerOpenweathermap}\n        color=\"primary\"\n        inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n        title=\"Show weather from server 1\"\n      />\n      <br />\n      <span>Server 2:</span>\n      <Checkbox\n        checked={isCheckboxServerWeatherbit}\n        onChange={onHandleChangeCheckboxServerWeatherbit}\n        color=\"primary\"\n        inputProps={{ \"aria-label\": \"secondary checkbox\" }}\n        title=\"Show weather from server 2\"\n      />\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isCheckboxServerOpenweathermap: getCheckboxServerOpenweathermap(state),\n    isCheckboxServerWeatherbit: getCheckboxServerWeatherbit(state),\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onHandleChangeCheckboxServerOpenweathermap: () =>\n      dispatch(handleChangeCheckboxServerOpenweathermap()),\n    onHandleChangeCheckboxServerWeatherbit: () =>\n      dispatch(handleChangeCheckboxServerWeatherbit()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Checkboxs);\n"]},"metadata":{},"sourceType":"module"}