{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/test/work/allProjects/components/Weather/ShowWeather/Weather.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport classes from \"./Weather.module.css\";\nimport { getCountryCode, getCityName, getTemp, getDescription, getWindSpeed } from \"../../../redux/Weather/selectors/selectors\";\n\nfunction Weather({\n  cityName,\n  temp,\n  description,\n  windSpeed,\n  countryCode\n}) {\n  const world = \"./public/world.png\";\n  const city = \"../../../public/city.png\";\n  const wind = \"../../../public/wind.png\";\n  const temperature = parseFloat(temp) > 0 ? \"../../../public/temperature.png\" : \"../../../public/temperature-outside.png\";\n  var preciptionObject = {\n    rain: \"../../../public/rain.png\",\n    snow: \"../../../public/snow.png\",\n    clouds: \"../../../public/clouds.png\",\n    haze: \"../../../public/haze.png\",\n    sky: \"../../../public/sun.png\"\n  };\n  const entries = Object.entries(preciptionObject);\n  const preciption = description ? entries.filter(el => description.toLowerCase().includes(el[0])).pop().pop() : \"\";\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: classes.icons,\n        src: world,\n        alt: \"not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: countryCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: classes.icons,\n        src: city,\n        alt: \"not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: cityName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: classes.icons,\n        src: temperature,\n        alt: \"not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: temp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: classes.icons,\n        src: preciption || preciptionObject.clouds,\n        alt: \"not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: classes.icons,\n        src: wind,\n        alt: \"not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: windSpeed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\nfunction mapStateToProps(state) {\n  return {\n    countryCode: getCountryCode(state),\n    cityName: getCityName(state),\n    temp: getTemp(state),\n    description: getDescription(state),\n    windSpeed: getWindSpeed(state)\n  };\n}\n\nexport default connect(mapStateToProps, null)(Weather);","map":{"version":3,"sources":["/home/test/work/allProjects/components/Weather/ShowWeather/Weather.jsx"],"names":["React","connect","classes","getCountryCode","getCityName","getTemp","getDescription","getWindSpeed","Weather","cityName","temp","description","windSpeed","countryCode","world","city","wind","temperature","parseFloat","preciptionObject","rain","snow","clouds","haze","sky","entries","Object","preciption","filter","el","toLowerCase","includes","pop","container","icons","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport classes from \"./Weather.module.css\";\nimport {\n  getCountryCode,\n  getCityName,\n  getTemp,\n  getDescription,\n  getWindSpeed,\n} from \"../../../redux/Weather/selectors/selectors\";\n\nfunction Weather({ cityName, temp, description, windSpeed, countryCode }) {\n  const world = \"./public/world.png\";\n  const city = \"../../../public/city.png\";\n  const wind = \"../../../public/wind.png\";\n  const temperature =\n    parseFloat(temp) > 0\n      ? \"../../../public/temperature.png\"\n      : \"../../../public/temperature-outside.png\";\n\n  var preciptionObject = {\n    rain: \"../../../public/rain.png\",\n    snow: \"../../../public/snow.png\",\n    clouds: \"../../../public/clouds.png\",\n    haze: \"../../../public/haze.png\",\n    sky: \"../../../public/sun.png\",\n  };\n\n  const entries = Object.entries(preciptionObject);\n  const preciption = description\n    ? entries\n        .filter((el) => description.toLowerCase().includes(el[0]))\n        .pop()\n        .pop()\n    : \"\";\n\n  return (\n    <div className={classes.container}>\n      <div>\n        <img className={classes.icons} src={world} alt={\"not found\"} />\n        <h2>{countryCode}</h2>\n      </div>\n\n      <div>\n        <img className={classes.icons} src={city} alt={\"not found\"} />\n        <h2>{cityName}</h2>\n      </div>\n\n      <div>\n        <img className={classes.icons} src={temperature} alt={\"not found\"} />\n        <h2>{temp}</h2>\n      </div>\n\n      <div>\n        <img\n          className={classes.icons}\n          src={preciption || preciptionObject.clouds}\n          alt={\"not found\"}\n        />\n        <h2>{description}</h2>\n      </div>\n\n      <div>\n        <img className={classes.icons} src={wind} alt={\"not found\"} />\n        <h2>{windSpeed}</h2>\n      </div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    countryCode: getCountryCode(state),\n    cityName: getCityName(state),\n    temp: getTemp(state),\n    description: getDescription(state),\n    windSpeed: getWindSpeed(state),\n  };\n}\n\nexport default connect(mapStateToProps, null)(Weather);\n"]},"metadata":{},"sourceType":"module"}