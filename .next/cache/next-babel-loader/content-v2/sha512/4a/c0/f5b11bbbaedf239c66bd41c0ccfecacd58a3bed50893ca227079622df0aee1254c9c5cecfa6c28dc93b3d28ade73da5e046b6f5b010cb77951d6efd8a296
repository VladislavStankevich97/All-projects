{"ast":null,"code":"import _defineProperty from \"/home/test/work/allProjects/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { PUT_CHARACTERS, REMEMBER_PAGE } from \"../actions/constants\";\nvar initialState = {\n  modal: false,\n  pages: null,\n  page: null,\n  characters: []\n};\n\nvar putCharacters = function putCharacters() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case PUT_CHARACTERS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        pages: action.payload.info.pages,\n        characters: action.payload.results.splice(0, 10)\n      });\n\n    case REMEMBER_PAGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        page: action.page\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default putCharacters;","map":{"version":3,"sources":["/home/test/work/allProjects/redux/Rick and Morty/reducers/putCharacters.js"],"names":["PUT_CHARACTERS","REMEMBER_PAGE","initialState","modal","pages","page","characters","putCharacters","state","action","type","payload","info","results","splice"],"mappings":";;;;;;AAAA,SAASA,cAAT,EAAyBC,aAAzB,QAA8C,sBAA9C;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,KADY;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,IAAI,EAAE,IAHa;AAInBC,EAAAA,UAAU,EAAE;AAJO,CAArB;;AAOA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AACtD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,cAAL;AACE,6CACKQ,KADL;AAEEJ,QAAAA,KAAK,EAAEK,MAAM,CAACE,OAAP,CAAeC,IAAf,CAAoBR,KAF7B;AAGEE,QAAAA,UAAU,EAAEG,MAAM,CAACE,OAAP,CAAeE,OAAf,CAAuBC,MAAvB,CAA8B,CAA9B,EAAiC,EAAjC;AAHd;;AAKF,SAAKb,aAAL;AACE,6CACKO,KADL;AAEEH,QAAAA,IAAI,EAAEI,MAAM,CAACJ;AAFf;;AAIF;AACE,aAAOG,KAAP;AAbJ;AAeD,CAhBD;;AAkBA,eAAeD,aAAf","sourcesContent":["import { PUT_CHARACTERS, REMEMBER_PAGE } from \"../actions/constants\";\n\nconst initialState = {\n  modal: false,\n  pages: null,\n  page: null,\n  characters: [],\n};\n\nconst putCharacters = (state = initialState, action) => {\n  switch (action.type) {\n    case PUT_CHARACTERS:\n      return {\n        ...state,\n        pages: action.payload.info.pages,\n        characters: action.payload.results.splice(0, 10),\n      };\n    case REMEMBER_PAGE:\n      return {\n        ...state,\n        page: action.page,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default putCharacters;\n"]},"metadata":{},"sourceType":"module"}