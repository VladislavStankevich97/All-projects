{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/test/work/allProjects/components/Weather/UI/inputFields/InputFields.jsx\";\nimport React from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { connect } from \"react-redux\";\nimport { handleChangeInputCity, handleChangeInputCountry } from \"../../../redux/actions/ui\";\nimport classes from \"./inputFields.module.css\";\nimport { getCity, getCountry, getErrMessage } from \"../../../selectors/selectors\";\n\nfunction InputField(props) {\n  var city = props.city,\n      country = props.country,\n      errMessage = props.errMessage,\n      onHandleChangeInputCity = props.onHandleChangeInputCity,\n      onHandleChangeInputCountry = props.onHandleChangeInputCountry;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.city,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        error: errMessage ? true : false,\n        className: classes.outlinedErr,\n        helperText: errMessage ? /*#__PURE__*/_jsxDEV(Alert, {\n          severity: \"error\",\n          children: errMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 26\n        }, this) : null,\n        label: errMessage ? \"This city does not exist\" : \"Сity ​​name\",\n        variant: \"outlined\",\n        value: city,\n        onChange: onHandleChangeInputCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.city,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.outlined,\n        placeholder: \"For example: BY\",\n        label: \"Country code\",\n        variant: \"outlined\",\n        type: \"text\",\n        value: country,\n        onChange: onHandleChangeInputCountry\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_c = InputField;\n\nfunction mapStateToProps(state) {\n  return {\n    city: getCity(state),\n    country: getCountry(state),\n    errMessage: getErrMessage(state)\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    onHandleChangeInputCity: function onHandleChangeInputCity(value) {\n      return dispatch(handleChangeInputCity(value.target.value));\n    },\n    onHandleChangeInputCountry: function onHandleChangeInputCountry(value) {\n      return dispatch(handleChangeInputCountry(value.target.value));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputField);\n\nvar _c;\n\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"sources":["/home/test/work/allProjects/components/Weather/UI/inputFields/InputFields.jsx"],"names":["React","TextField","Alert","connect","handleChangeInputCity","handleChangeInputCountry","classes","getCity","getCountry","getErrMessage","InputField","props","city","country","errMessage","onHandleChangeInputCity","onHandleChangeInputCountry","container","outlinedErr","outlined","mapStateToProps","state","mapDispatchToProps","dispatch","value","target"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SACEC,qBADF,EAEEC,wBAFF,QAGO,2BAHP;AAIA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SACEC,OADF,EAEEC,UAFF,EAGEC,aAHF,QAIO,8BAJP;;AAMA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA,MAEvBC,IAFuB,GAOrBD,KAPqB,CAEvBC,IAFuB;AAAA,MAGvBC,OAHuB,GAOrBF,KAPqB,CAGvBE,OAHuB;AAAA,MAIvBC,UAJuB,GAOrBH,KAPqB,CAIvBG,UAJuB;AAAA,MAKvBC,uBALuB,GAOrBJ,KAPqB,CAKvBI,uBALuB;AAAA,MAMvBC,0BANuB,GAOrBL,KAPqB,CAMvBK,0BANuB;AASzB,sBACE;AAAK,IAAA,SAAS,EAAEV,OAAO,CAACW,SAAxB;AAAA,4BACE;AAAK,MAAA,SAAS,EAAEX,OAAO,CAACM,IAAxB;AAAA,6BACE,QAAC,SAAD;AACE,QAAA,KAAK,EAAEE,UAAU,GAAG,IAAH,GAAU,KAD7B;AAEE,QAAA,SAAS,EAAER,OAAO,CAACY,WAFrB;AAGE,QAAA,UAAU,EACRJ,UAAU,gBAAG,QAAC,KAAD;AAAO,UAAA,QAAQ,EAAC,OAAhB;AAAA,oBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAAH,GAAkD,IAJhE;AAME,QAAA,KAAK,EAAEA,UAAU,GAAG,0BAAH,GAAgC,aANnD;AAOE,QAAA,OAAO,EAAC,UAPV;AAQE,QAAA,KAAK,EAAEF,IART;AASE,QAAA,QAAQ,EAAEG;AATZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAcE;AAAK,MAAA,SAAS,EAAET,OAAO,CAACM,IAAxB;AAAA,6BACE,QAAC,SAAD;AACE,QAAA,SAAS,EAAEN,OAAO,CAACa,QADrB;AAEE,QAAA,WAAW,EAAC,iBAFd;AAGE,QAAA,KAAK,EAAC,cAHR;AAIE,QAAA,OAAO,EAAC,UAJV;AAKE,QAAA,IAAI,EAAC,MALP;AAME,QAAA,KAAK,EAAEN,OANT;AAOE,QAAA,QAAQ,EAAEG;AAPZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;KArCQN,U;;AAuCT,SAASU,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLT,IAAAA,IAAI,EAAEL,OAAO,CAACc,KAAD,CADR;AAELR,IAAAA,OAAO,EAAEL,UAAU,CAACa,KAAD,CAFd;AAGLP,IAAAA,UAAU,EAAEL,aAAa,CAACY,KAAD;AAHpB,GAAP;AAKD;;AAED,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAc;AACvC,SAAO;AACLR,IAAAA,uBAAuB,EAAE,iCAACS,KAAD;AAAA,aACvBD,QAAQ,CAACnB,qBAAqB,CAACoB,KAAK,CAACC,MAAN,CAAaD,KAAd,CAAtB,CADe;AAAA,KADpB;AAGLR,IAAAA,0BAA0B,EAAE,oCAACQ,KAAD;AAAA,aAC1BD,QAAQ,CAAClB,wBAAwB,CAACmB,KAAK,CAACC,MAAN,CAAaD,KAAd,CAAzB,CADkB;AAAA;AAHvB,GAAP;AAMD,CAPD;;AASA,eAAerB,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CZ,UAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { connect } from \"react-redux\";\nimport {\n  handleChangeInputCity,\n  handleChangeInputCountry,\n} from \"../../../redux/actions/ui\";\nimport classes from \"./inputFields.module.css\";\nimport {\n  getCity,\n  getCountry,\n  getErrMessage,\n} from \"../../../selectors/selectors\";\n\nfunction InputField(props) {\n  const {\n    city,\n    country,\n    errMessage,\n    onHandleChangeInputCity,\n    onHandleChangeInputCountry,\n  } = props;\n\n  return (\n    <div className={classes.container}>\n      <div className={classes.city}>\n        <TextField\n          error={errMessage ? true : false}\n          className={classes.outlinedErr}\n          helperText={\n            errMessage ? <Alert severity=\"error\">{errMessage}</Alert> : null\n          }\n          label={errMessage ? \"This city does not exist\" : \"Сity ​​name\"}\n          variant=\"outlined\"\n          value={city}\n          onChange={onHandleChangeInputCity}\n        />\n      </div>\n      <div className={classes.city}>\n        <TextField\n          className={classes.outlined}\n          placeholder=\"For example: BY\"\n          label=\"Country code\"\n          variant=\"outlined\"\n          type=\"text\"\n          value={country}\n          onChange={onHandleChangeInputCountry}\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    city: getCity(state),\n    country: getCountry(state),\n    errMessage: getErrMessage(state),\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onHandleChangeInputCity: (value) =>\n      dispatch(handleChangeInputCity(value.target.value)),\n    onHandleChangeInputCountry: (value) =>\n      dispatch(handleChangeInputCountry(value.target.value)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InputField);\n"]},"metadata":{},"sourceType":"module"}