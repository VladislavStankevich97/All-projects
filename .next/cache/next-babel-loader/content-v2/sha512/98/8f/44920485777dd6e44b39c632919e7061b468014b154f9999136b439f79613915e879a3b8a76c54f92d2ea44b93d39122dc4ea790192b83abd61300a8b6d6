{"ast":null,"code":"import { takeEvery, put, call } from \"redux-saga/effects\";\nimport { showLoader, hideLoader } from \"../actions/loadingIndicator\";\nimport { errMessage, putWeatherServerWeatherbit } from \"../actions/serverWeatherbit_saga\";\nimport { LOAD_WEATHER_SERVER_WEATHERBIT } from \"../actions/constants\";\nimport { API_KEY_SERVER_WEATHERBIT } from \"../actions/constantsApi\";\n\nconst fetchData = (city, country) => {\n  return fetch(`https://api.weatherbit.io/v2.0/current?&city=${city}&country=${country.toUpperCase()}&key=2e207e78e6e446dfb761302d6fbc17f4`).then(respone => respone.json());\n};\n\nfunction* workerLoadData({\n  city,\n  country\n}) {\n  try {\n    yield put(showLoader());\n    const data = yield call(fetchData, city, country);\n\n    if (data.error || data.status > 200 && data.status < 400) {\n      yield put(errMessage(data));\n    } else {\n      yield put(putWeatherServerWeatherbit(data));\n    }\n\n    yield put(hideLoader());\n  } catch (err) {\n    const data = {\n      error: \"city not found\"\n    };\n    console.log(data);\n    yield put(errMessage(data));\n    yield put(hideLoader());\n  }\n}\n\nexport default function* watchLoadData2() {\n  yield takeEvery(LOAD_WEATHER_SERVER_WEATHERBIT, workerLoadData);\n}","map":{"version":3,"sources":["/home/test/work/allProjects/redux/Weather/generators/saga.js"],"names":["takeEvery","put","call","showLoader","hideLoader","errMessage","putWeatherServerWeatherbit","LOAD_WEATHER_SERVER_WEATHERBIT","API_KEY_SERVER_WEATHERBIT","fetchData","city","country","fetch","toUpperCase","then","respone","json","workerLoadData","data","error","status","err","console","log","watchLoadData2"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,QAAqC,oBAArC;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,6BAAvC;AACA,SACEC,UADF,EAEEC,0BAFF,QAGO,kCAHP;AAIA,SAASC,8BAAT,QAA+C,sBAA/C;AACA,SAASC,yBAAT,QAA0C,yBAA1C;;AAEA,MAAMC,SAAS,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmB;AACnC,SAAOC,KAAK,CACT,gDAA+CF,IAAK,YAAWC,OAAO,CAACE,WAAR,EAAsB,uCAD5E,CAAL,CAELC,IAFK,CAECC,OAAD,IAAaA,OAAO,CAACC,IAAR,EAFb,CAAP;AAGD,CAJD;;AAMA,UAAUC,cAAV,CAAyB;AAAEP,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAzB,EAA4C;AAC1C,MAAI;AACF,UAAMV,GAAG,CAACE,UAAU,EAAX,CAAT;AACA,UAAMe,IAAI,GAAG,MAAMhB,IAAI,CAACO,SAAD,EAAYC,IAAZ,EAAkBC,OAAlB,CAAvB;;AACA,QAAIO,IAAI,CAACC,KAAL,IAAeD,IAAI,CAACE,MAAL,GAAc,GAAd,IAAqBF,IAAI,CAACE,MAAL,GAAc,GAAtD,EAA4D;AAC1D,YAAMnB,GAAG,CAACI,UAAU,CAACa,IAAD,CAAX,CAAT;AACD,KAFD,MAEO;AACL,YAAMjB,GAAG,CAACK,0BAA0B,CAACY,IAAD,CAA3B,CAAT;AACD;;AACD,UAAMjB,GAAG,CAACG,UAAU,EAAX,CAAT;AACD,GATD,CASE,OAAOiB,GAAP,EAAY;AACZ,UAAMH,IAAI,GAAG;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAGAG,IAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,UAAMjB,GAAG,CAACI,UAAU,CAACa,IAAD,CAAX,CAAT;AACA,UAAMjB,GAAG,CAACG,UAAU,EAAX,CAAT;AACD;AACF;;AAED,eAAe,UAAUoB,cAAV,GAA2B;AACxC,QAAMxB,SAAS,CAACO,8BAAD,EAAiCU,cAAjC,CAAf;AACD","sourcesContent":["import { takeEvery, put, call } from \"redux-saga/effects\";\nimport { showLoader, hideLoader } from \"../actions/loadingIndicator\";\nimport {\n  errMessage,\n  putWeatherServerWeatherbit,\n} from \"../actions/serverWeatherbit_saga\";\nimport { LOAD_WEATHER_SERVER_WEATHERBIT } from \"../actions/constants\";\nimport { API_KEY_SERVER_WEATHERBIT } from \"../actions/constantsApi\";\n\nconst fetchData = (city, country) => {\n  return fetch(\n    `https://api.weatherbit.io/v2.0/current?&city=${city}&country=${country.toUpperCase()}&key=2e207e78e6e446dfb761302d6fbc17f4`\n  ).then((respone) => respone.json());\n};\n\nfunction* workerLoadData({ city, country }) {\n  try {\n    yield put(showLoader());\n    const data = yield call(fetchData, city, country);\n    if (data.error || (data.status > 200 && data.status < 400)) {\n      yield put(errMessage(data));\n    } else {\n      yield put(putWeatherServerWeatherbit(data));\n    }\n    yield put(hideLoader());\n  } catch (err) {\n    const data = {\n      error: \"city not found\",\n    };\n    console.log(data);\n    yield put(errMessage(data));\n    yield put(hideLoader());\n  }\n}\n\nexport default function* watchLoadData2() {\n  yield takeEvery(LOAD_WEATHER_SERVER_WEATHERBIT, workerLoadData);\n}"]},"metadata":{},"sourceType":"module"}